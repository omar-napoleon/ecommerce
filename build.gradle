buildscript {
	ext {
		projectGroup = 'com.demo'
		projectVersion = '0.0.1-SNAPSHOT'
		springBootVersion = '3.1.4-SNAPSHOT'
	}
	repositories{
		mavenCentral()
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	id "se.thinkcode.cucumber-runner" version "0.0.8"

}

apply from: 'test.gradle'

group = '${projectGroup}'
version = '${projectVersion}'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	cucumberRuntime {
		extendsFrom testImplementation
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	compileOnly 'org.projectlombok:lombok'
	implementation 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.modelmapper:modelmapper:2.4.4'


	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.cucumber:cucumber-java:6.10.4'
	testImplementation 'io.cucumber:cucumber-junit:6.10.4'
	testImplementation 'io.cucumber:cucumber-spring:6.10.4'
}

bootJar {
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
tasks.withType(Copy).all { duplicatesStrategy 'exclude' }
